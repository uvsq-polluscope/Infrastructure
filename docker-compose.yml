version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - mynetwork 
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    volumes:
      - kafkadata:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - mynetwork

  postgresdw:
    build:
      context: ./datawarehouse
      dockerfile: Dockerfile
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: dwaccount
      POSTGRES_PASSWORD: password
    volumes:
      - pgdwdata:/var/lib/postgresql/data
    networks:
      - mynetwork

  postgrespreprots:
    build:
      context: ./pgtimeseries
      dockerfile: Dockerfile
    ports:
      - "5434:5432"
    volumes:
      - pgtsdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: dwaccount
      POSTGRES_PASSWORD: password
    networks:
      - mynetwork

  pgcsource:
    build:
      context: ./pgsource
      dockerfile: Dockerfile
    ports:
        - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: sde_group
      CONFIG_STORAGE_TOPIC: sde_storage_topic
      OFFSET_STORAGE_TOPIC: sde_offset_topic
    networks:
        - mynetwork
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9000:8080"
    restart: always
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:22181
    networks:
      - mynetwork

volumes:
  pgdwdata:
  pgtsdata:
  kafkadata:

networks:
  mynetwork:
    external:
      name: mynetwork
 
